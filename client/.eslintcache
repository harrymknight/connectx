[{"/usr/src/client/src/index.tsx":"1","/usr/src/client/src/reportWebVitals.ts":"2","/usr/src/client/src/components/app/app.tsx":"3","/usr/src/client/src/routes/index.ts":"4","/usr/src/client/src/routes/config.tsx":"5","/usr/src/client/src/routes/utils.tsx":"6","/usr/src/client/src/routes/login/index.ts":"7","/usr/src/client/src/routes/login/login.tsx":"8","/usr/src/client/src/routes/login/components/eye-closed/index.ts":"9","/usr/src/client/src/routes/login/components/eye-open/index.ts":"10","/usr/src/client/src/routes/login/components/eye-closed/eye-closed.tsx":"11","/usr/src/client/src/routes/login/components/eye-open/eye-open.tsx":"12","/usr/src/client/src/routes/login/components/refresh/index.ts":"13","/usr/src/client/src/routes/login/components/refresh/refresh.tsx":"14","/usr/src/client/src/routes/login/components/login-status/index.ts":"15","/usr/src/client/src/routes/login/components/login-status/login-status.tsx":"16","/usr/src/client/src/utils/index.ts":"17","/usr/src/client/src/utils/api.ts":"18","/usr/src/client/src/routes/login/components/error-message/index.ts":"19","/usr/src/client/src/routes/login/components/error-message/error-message.tsx":"20","/usr/src/client/src/contexts/index.ts":"21","/usr/src/client/src/contexts/app/index.ts":"22","/usr/src/client/src/contexts/app/app-context.tsx":"23","/usr/src/client/src/contexts/auth/index.ts":"24","/usr/src/client/src/contexts/auth/auth-context.tsx":"25","/usr/src/client/src/contexts/auth/user-context.tsx":"26","/usr/src/client/src/components/index.ts":"27","/usr/src/client/src/components/app/index.ts":"28","/usr/src/client/src/routes/root/root.tsx":"29","/usr/src/client/src/routes/root/index.ts":"30","/usr/src/client/src/contexts/websocket/index.ts":"31","/usr/src/client/src/contexts/websocket/websocket-context.tsx":"32","/usr/src/client/src/routes/host/index.ts":"33","/usr/src/client/src/routes/match/index.ts":"34","/usr/src/client/src/routes/matches/index.ts":"35","/usr/src/client/src/routes/profile/index.tsx":"36","/usr/src/client/src/routes/host/host.tsx":"37","/usr/src/client/src/routes/match/match.tsx":"38","/usr/src/client/src/routes/matches/matches.tsx":"39","/usr/src/client/src/routes/profile/profile.tsx":"40","/usr/src/client/src/routes/profile/components/logout/index.ts":"41","/usr/src/client/src/routes/matches/components/match-list/index.ts":"42","/usr/src/client/src/routes/profile/components/logout/logout.tsx":"43","/usr/src/client/src/routes/matches/components/match-list/match-list.tsx":"44","/usr/src/client/src/routes/matches/components/match-action/index.ts":"45","/usr/src/client/src/routes/matches/components/match-item/index.ts":"46","/usr/src/client/src/routes/matches/components/match-action/match-action.tsx":"47","/usr/src/client/src/routes/matches/components/match-item/match-item.tsx":"48","/usr/src/client/src/routes/matches/components/match-password/index.ts":"49","/usr/src/client/src/routes/matches/components/match-password/match-password.tsx":"50","/usr/src/client/src/routes/lobby/index.ts":"51","/usr/src/client/src/routes/lobby/lobby.tsx":"52","/usr/src/client/src/components/counter/index.ts":"53","/usr/src/client/src/components/counter/counter.tsx":"54","/usr/src/client/src/routes/lobby/components/colour-selector/index.ts":"55","/usr/src/client/src/routes/lobby/components/colour-selector/colour-selector.tsx":"56","/usr/src/client/src/routes/lobby/hooks/index.ts":"57","/usr/src/client/src/routes/lobby/hooks/use-lobby.tsx":"58","/usr/src/client/src/routes/play/index.ts":"59","/usr/src/client/src/routes/play/play.tsx":"60","/usr/src/client/src/components/game/index.ts":"61","/usr/src/client/src/components/game/game.tsx":"62","/usr/src/client/src/components/game/components/index.ts":"63","/usr/src/client/src/components/game/components/board/index.ts":"64","/usr/src/client/src/components/game/components/board/board.tsx":"65","/usr/src/client/src/components/game/components/input-row/index.ts":"66","/usr/src/client/src/components/game/components/input-row/input-row.tsx":"67","/usr/src/client/src/components/game/hooks/index.ts":"68","/usr/src/client/src/components/game/hooks/use-element-dimensions.tsx":"69","/usr/src/client/src/contexts/match/index.ts":"70","/usr/src/client/src/contexts/match/match-context.tsx":"71","/usr/src/client/src/components/game/components/input-slot/index.ts":"72","/usr/src/client/src/components/game/components/input-slot/input-slot.tsx":"73","/usr/src/client/src/components/game/components/board-counter/index.ts":"74","/usr/src/client/src/components/game/components/board-counter/board-counter.tsx":"75","/usr/src/client/src/components/game/components/board-counter-column/index.ts":"76","/usr/src/client/src/components/game/components/board-counter-column/board-counter-column.tsx":"77","/usr/src/client/src/components/game/hooks/use-component-id.tsx":"78","/usr/src/client/src/components/game/components/slot/index.ts":"79","/usr/src/client/src/components/game/components/slot/slot.tsx":"80","/usr/src/client/src/components/game/components/board-slot/index.ts":"81","/usr/src/client/src/components/game/components/board-slot/board-slot.tsx":"82"},{"size":878,"mtime":1612781738213,"results":"83","hashOfConfig":"84"},{"size":425,"mtime":1611870321257,"results":"85","hashOfConfig":"84"},{"size":1314,"mtime":1613479790281,"results":"86","hashOfConfig":"84"},{"size":156,"mtime":1613063387160,"results":"87","hashOfConfig":"84"},{"size":1863,"mtime":1614876180867,"results":"88","hashOfConfig":"84"},{"size":1606,"mtime":1613062893177,"results":"89","hashOfConfig":"84"},{"size":43,"mtime":1612015435608,"results":"90","hashOfConfig":"84"},{"size":5422,"mtime":1613316077444,"results":"91","hashOfConfig":"84"},{"size":51,"mtime":1612192315183,"results":"92","hashOfConfig":"84"},{"size":47,"mtime":1612192213308,"results":"93","hashOfConfig":"84"},{"size":794,"mtime":1612194200426,"results":"94","hashOfConfig":"84"},{"size":648,"mtime":1612194198706,"results":"95","hashOfConfig":"84"},{"size":46,"mtime":1612372022752,"results":"96","hashOfConfig":"84"},{"size":610,"mtime":1612433933717,"results":"97","hashOfConfig":"84"},{"size":131,"mtime":1612870912657,"results":"98","hashOfConfig":"84"},{"size":1595,"mtime":1613401924540,"results":"99","hashOfConfig":"84"},{"size":38,"mtime":1612437019405,"results":"100","hashOfConfig":"84"},{"size":124,"mtime":1612799628347,"results":"101","hashOfConfig":"84"},{"size":57,"mtime":1612549591011,"results":"102","hashOfConfig":"84"},{"size":251,"mtime":1612550102141,"results":"103","hashOfConfig":"84"},{"size":36,"mtime":1612781215773,"results":"104","hashOfConfig":"84"},{"size":55,"mtime":1612781007271,"results":"105","hashOfConfig":"84"},{"size":428,"mtime":1613404001843,"results":"106","hashOfConfig":"84"},{"size":191,"mtime":1612794801161,"results":"107","hashOfConfig":"84"},{"size":2902,"mtime":1613425545146,"results":"108","hashOfConfig":"84"},{"size":450,"mtime":1613407620164,"results":"109","hashOfConfig":"84"},{"size":81,"mtime":1614957780019,"results":"110","hashOfConfig":"84"},{"size":32,"mtime":1611941204038,"results":"111","hashOfConfig":"84"},{"size":1018,"mtime":1614532799093,"results":"112","hashOfConfig":"84"},{"size":40,"mtime":1613063080771,"results":"113","hashOfConfig":"84"},{"size":108,"mtime":1613403355328,"results":"114","hashOfConfig":"84"},{"size":3762,"mtime":1615560200858,"results":"115","hashOfConfig":"84"},{"size":41,"mtime":1613062377551,"results":"116","hashOfConfig":"84"},{"size":43,"mtime":1614439832655,"results":"117","hashOfConfig":"84"},{"size":47,"mtime":1613475022452,"results":"118","hashOfConfig":"84"},{"size":47,"mtime":1613062377523,"results":"119","hashOfConfig":"84"},{"size":4802,"mtime":1615284509288,"results":"120","hashOfConfig":"84"},{"size":2785,"mtime":1615487226812,"results":"121","hashOfConfig":"84"},{"size":2298,"mtime":1614455832227,"results":"122","hashOfConfig":"84"},{"size":379,"mtime":1614455843557,"results":"123","hashOfConfig":"84"},{"size":45,"mtime":1613062377519,"results":"124","hashOfConfig":"84"},{"size":52,"mtime":1614092857754,"results":"125","hashOfConfig":"84"},{"size":1071,"mtime":1614455814161,"results":"126","hashOfConfig":"84"},{"size":2044,"mtime":1614621067002,"results":"127","hashOfConfig":"84"},{"size":54,"mtime":1614181672926,"results":"128","hashOfConfig":"84"},{"size":52,"mtime":1614095462608,"results":"129","hashOfConfig":"84"},{"size":1089,"mtime":1614621097853,"results":"130","hashOfConfig":"84"},{"size":1170,"mtime":1614178819272,"results":"131","hashOfConfig":"84"},{"size":60,"mtime":1614355663237,"results":"132","hashOfConfig":"84"},{"size":2193,"mtime":1614622138968,"results":"133","hashOfConfig":"84"},{"size":43,"mtime":1614512247038,"results":"134","hashOfConfig":"84"},{"size":1816,"mtime":1615231534513,"results":"135","hashOfConfig":"84"},{"size":45,"mtime":1614534751679,"results":"136","hashOfConfig":"84"},{"size":470,"mtime":1614958438747,"results":"137","hashOfConfig":"84"},{"size":62,"mtime":1614549149723,"results":"138","hashOfConfig":"84"},{"size":903,"mtime":1615032933287,"results":"139","hashOfConfig":"84"},{"size":48,"mtime":1614680865277,"results":"140","hashOfConfig":"84"},{"size":5488,"mtime":1615231407760,"results":"141","hashOfConfig":"84"},{"size":41,"mtime":1614876145532,"results":"142","hashOfConfig":"84"},{"size":458,"mtime":1615487292868,"results":"143","hashOfConfig":"84"},{"size":33,"mtime":1614957772415,"results":"144","hashOfConfig":"84"},{"size":4940,"mtime":1616349187326,"results":"145","hashOfConfig":"84"},{"size":94,"mtime":1614959488642,"results":"146","hashOfConfig":"84"},{"size":34,"mtime":1614958754559,"results":"147","hashOfConfig":"84"},{"size":840,"mtime":1616349235870,"results":"148","hashOfConfig":"84"},{"size":38,"mtime":1614959474458,"results":"149","hashOfConfig":"84"},{"size":1349,"mtime":1615559958149,"results":"150","hashOfConfig":"84"},{"size":139,"mtime":1616263542708,"results":"151","hashOfConfig":"84"},{"size":776,"mtime":1616263465825,"results":"152","hashOfConfig":"84"},{"size":62,"mtime":1614882782876,"results":"153","hashOfConfig":"84"},{"size":1803,"mtime":1615487535009,"results":"154","hashOfConfig":"84"},{"size":52,"mtime":1615046837443,"results":"155","hashOfConfig":"84"},{"size":1461,"mtime":1615560225706,"results":"156","hashOfConfig":"84"},{"size":58,"mtime":1616237838820,"results":"157","hashOfConfig":"84"},{"size":1667,"mtime":1616351176112,"results":"158","hashOfConfig":"84"},{"size":71,"mtime":1616237967579,"results":"159","hashOfConfig":"84"},{"size":462,"mtime":1616349291487,"results":"160","hashOfConfig":"84"},{"size":250,"mtime":1616263733524,"results":"161","hashOfConfig":"84"},{"size":41,"mtime":1616263892098,"results":"162","hashOfConfig":"84"},{"size":741,"mtime":1616264072299,"results":"163","hashOfConfig":"84"},{"size":52,"mtime":1616344884174,"results":"164","hashOfConfig":"84"},{"size":253,"mtime":1616344870853,"results":"165","hashOfConfig":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"u3iohv",{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"168"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"168"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"168"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"168"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"168"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"168"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"168"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"168"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"168"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"168"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"168"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"168"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"168"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"168"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"168"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/usr/src/client/src/index.tsx",[],["347","348"],"/usr/src/client/src/reportWebVitals.ts",[],"/usr/src/client/src/components/app/app.tsx",["349"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ROUTES, RenderRoutes, RouteConfig } from \"../../routes\";\n\nfunction App() {\n  return (\n    <div style={{ display: \"flex\", height: \"100vh\" }}>\n      <RenderRoutes routes={ROUTES} />\n    </div>\n  );\n}\n\nexport default App;\n\n/**\n * Render a nested hierarchy of route configs with unknown depth/breadth\n */\nfunction displayRouteMenu(routes: RouteConfig[]) {\n  /**\n   * Render a single route as a list item link to the config's pathname\n   */\n  function singleRoute(route: RouteConfig) {\n    return (\n      <li key={route.key}>\n        <Link to={route.path}>\n          {route.key} ({route.path})\n        </Link>\n      </li>\n    );\n  }\n\n  // loop through the array of routes and generate an unordered list\n  return (\n    <ul>\n      {routes.map((route: RouteConfig) => {\n        // if this route has sub-routes, then show the ROOT as a list item and recursively render a nested list of route links\n        if (route.routes) {\n          return (\n            <React.Fragment key={route.key}>\n              {singleRoute(route)}\n              {displayRouteMenu(route.routes)}\n            </React.Fragment>\n          );\n        }\n\n        // no nested routes, so just render a single route\n        return singleRoute(route);\n      })}\n    </ul>\n  );\n}","/usr/src/client/src/routes/index.ts",[],"/usr/src/client/src/routes/config.tsx",[],"/usr/src/client/src/routes/utils.tsx",[],"/usr/src/client/src/routes/login/index.ts",[],"/usr/src/client/src/routes/login/login.tsx",[],"/usr/src/client/src/routes/login/components/eye-closed/index.ts",[],"/usr/src/client/src/routes/login/components/eye-open/index.ts",[],"/usr/src/client/src/routes/login/components/eye-closed/eye-closed.tsx",[],"/usr/src/client/src/routes/login/components/eye-open/eye-open.tsx",[],"/usr/src/client/src/routes/login/components/refresh/index.ts",[],"/usr/src/client/src/routes/login/components/refresh/refresh.tsx",[],"/usr/src/client/src/routes/login/components/login-status/index.ts",[],"/usr/src/client/src/routes/login/components/login-status/login-status.tsx",[],"/usr/src/client/src/utils/index.ts",[],"/usr/src/client/src/utils/api.ts",[],"/usr/src/client/src/routes/login/components/error-message/index.ts",[],["350","351"],"/usr/src/client/src/routes/login/components/error-message/error-message.tsx",[],"/usr/src/client/src/contexts/index.ts",[],"/usr/src/client/src/contexts/app/index.ts",[],"/usr/src/client/src/contexts/app/app-context.tsx",[],"/usr/src/client/src/contexts/auth/index.ts",[],"/usr/src/client/src/contexts/auth/auth-context.tsx",[],"/usr/src/client/src/contexts/auth/user-context.tsx",[],"/usr/src/client/src/components/index.ts",[],"/usr/src/client/src/components/app/index.ts",[],"/usr/src/client/src/routes/root/root.tsx",["352"],"import React, { useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { RenderRoutes, RouteConfig } from '../utils';\nimport './root.css'\n\nconst Root: React.FC<RouteConfig> = ({ routes }) => {\n  const history = useHistory();\n  const location = history.location.pathname.split('/')[1];\n  const notInMatch = location === 'profile' || location === 'host' || location === 'matches';\n  return (\n    <div className='root-container' >\n      {notInMatch ? (\n          <>\n            <div className='root-banner' >\n              <Link to={'/profile'}>\n                profile\n              </Link>\n              <Link to={'/host'}>\n                host match\n              </Link>\n              <Link to={'/matches'}>\n                matches\n              </Link>\n            </div>\n          </>\n        ) : (\n          null\n        )}\n      <div className={'root-main' + !notInMatch ? 'expanded': ''}>\n        <RenderRoutes routes={routes} />\n      </div>\n    </div>\n  )\n}\n\nexport default Root;","/usr/src/client/src/routes/root/index.ts",[],"/usr/src/client/src/contexts/websocket/index.ts",[],"/usr/src/client/src/contexts/websocket/websocket-context.tsx",[],"/usr/src/client/src/routes/host/index.ts",[],"/usr/src/client/src/routes/match/index.ts",[],"/usr/src/client/src/routes/matches/index.ts",[],"/usr/src/client/src/routes/profile/index.tsx",[],"/usr/src/client/src/routes/host/host.tsx",["353","354","355","356"],"import React, { useEffect, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { useHistory } from 'react-router-dom';\nimport { RouteConfig } from '..';\nimport { useUser } from '../../contexts/auth';\nimport { useWebSocket } from '../../contexts/websocket';\nimport { API } from '../../utils';\nimport './host.css';\n\nconst fetchMatchWords = async () => {\n    return API.get('words/?amount=10000');\n}\n\nconst Host: React.FC<RouteConfig> = () => {\n    const { isLoading, isError, isSuccess, data } = useQuery('matchName', fetchMatchWords);\n    const user = useUser();\n    const [name, setName] = useState('');\n    const [conjoinedName, setConjoinedName] = useState('');\n    const [password, setPassword] = useState('');\n    const [rows, setRows] = useState(6);\n    const [columns, setColumns] = useState(7);\n    const [countersToAlign, setCountersToAlign] = useState(4);\n    const [timeLimit, setTimeLimit] = useState(30);\n    const [counterAcceleration, setCounterAcceleration] = useState(9.79);\n    const { ws, wsEvent } = useWebSocket();\n\n    const isCreated = React.useCallback((data: any) => {\n        if (data) {\n            history.push(`/${conjoinedName}`);\n        }\n    }, [conjoinedName]);\n\n    useEffect(() => {\n        wsEvent({type: 'add', event: 'host', callback: isCreated});\n        return () => {\n            wsEvent({type: 'remove', event: 'host'});\n        };\n    }, [isCreated]);\n\n    const history = useHistory();\n    const handleSubmit = async () => {\n        ws.sendMessage('host', {\n            name,\n            password,\n            host: user.data.id,\n            rows,\n            columns,\n            align: countersToAlign,\n            timeLimit,\n            acceleration: counterAcceleration\n        })\n    };\n\n    if (isSuccess) {\n        if (!name) {\n            const words = data?.data.rows;\n            const pair: string[] = [];\n            const pass = words[Math.floor(Math.random() * words.length)].id;\n            while (pair.length < 2) {\n                const newWord = words[Math.floor(Math.random() * words.length)];\n                if (newWord.class === 'adjective' && pair.length === 0) {\n                    pair.push(newWord.id);\n                } else if (newWord.class === 'noun' && pair.length === 1) {\n                    pair.push(newWord.id);\n                }\n            }\n            setName(`${pair[0]} ${pair[1]}`);\n            setConjoinedName(`${pair[0]}${pair[1].charAt(0).toUpperCase() + pair[1].slice(1)}`)\n            setPassword(pass);\n        }\n    }\n\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { name } = e.target;\n        switch (name) {\n            case \"name\":\n                setName(e.target.value);\n                break;\n            case \"password\":\n                setPassword(e.target.value);\n                break;\n            case \"rows\":\n                setRows(+e.target.value);\n                break;\n            case \"columns\":\n                setColumns(+e.target.value);\n                break;\n            case \"countersToAlign\":\n                setCountersToAlign(+e.target.value);\n                break;\n            case \"timeLimit\":\n                setTimeLimit(+e.target.value);\n                break;\n            case \"counterAcceleration\":\n                setCounterAcceleration(+e.target.value);\n        }\n    }\n\n    return (\n        <div className='host-page' >\n            <form>\n                <div>\n                    <label> name </label>\n                    <label> password </label>\n                    <label> rows </label>\n                    <label> columns </label>\n                    <label> counters to align </label>\n                    <label> seconds per turn </label>\n                    <label> counter acceleration </label>\n                </div>\n                <div>\n                    <input name='name' type='text' value={name} onChange={handleInputChange} />\n                    <input name='password' type='text' value={password} onChange={handleInputChange} />\n                    <input name='rows' type='number' value={rows} onChange={handleInputChange} />\n                    <input name='columns' type='number' value={columns} onChange={handleInputChange} />\n                    <input name='countersToAlign' type='number' value={countersToAlign} onChange={handleInputChange} />\n                    <input name='timeLimit' type='number' value={timeLimit} onChange={handleInputChange} />\n                    <input name='counterAcceleration' type='range' value={counterAcceleration} onChange={handleInputChange} min='0.01' max='9.79' />\n                </div>\n            </form>\n            <button onClick={handleSubmit} >\n                submit\n            </button>\n        </div>\n    )\n}\n\nexport default Host;","/usr/src/client/src/routes/match/match.tsx",["357","358","359","360"],"import React, { useEffect } from 'react';\nimport { useQuery } from 'react-query';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { RouteConfig } from '..';\nimport { useWebSocketDispatch } from '../../contexts/websocket';\nimport { API } from '../../utils';\nimport { Refresh } from '../login/components/refresh';\nimport { RenderRoutes } from '../utils';\n\nconst separatedName = (matchName: string) => {\n    let end = 0;\n    for (let i = 0; i < matchName.length; i++) {\n        if (matchName[i].toUpperCase() === matchName[i]) {\n            end = i;\n        };\n    };\n    const firstPart = matchName.slice(0, end);\n    const secondPart = matchName.charAt(end).toLowerCase() + matchName.slice(end + 1);\n    return `${firstPart} ${secondPart}`;\n}\n\nconst fetchMatch = async ({ queryKey }: any) => {\n    const [_key, matchName] = queryKey;\n    const name = separatedName(matchName);\n    const match = await API.post('/match', { name });\n    const matchData = match.data[0];\n    const id = matchData.id;\n    const related = await API.get(`/match/${id}`);\n    const relatedData = related.data;\n    return { match: matchData, ...relatedData };\n}\n\nconst fetchColours = async () => {\n    const colours = await API.get('/colours')\n    return colours.data;\n}\n\nconst Match: React.FC<RouteConfig> = ({ routes }) => {\n    const { matchName } = useParams<{ matchName: string }>();\n    const match = useQuery<any, Error, any>(['match', matchName], fetchMatch);\n    const colours = useQuery('colours', fetchColours, {refetchOnWindowFocus: false });\n\n    const history = useHistory();\n    const wsEvent = useWebSocketDispatch();\n\n    useEffect(() => {\n        wsEvent({ type: 'add', event: 'start', callback: onStart });\n        return () => {\n            wsEvent({type: 'remove', event: 'start'});\n        }\n    }, []);\n\n    const onStart = React.useCallback(() => {\n        match.refetch();\n    }, []);\n\n    useEffect(() => {\n        const status = match.data?.match.state;\n        if (status === 'waiting') {\n            history.replace(`/${matchName}/lobby`, { ...match.data, colours: colours.data });\n        } else if (status === 'ongoing') {\n            history.replace(`/${matchName}/play`, { ...match.data, colours: colours.data });\n        } else if (status === 'complete') {\n            history.replace(`/${matchName}/complete`, { ...match.data, colours: colours.data });\n        }\n    }, [match.data, colours.data]);\n\n    if (match.isLoading || colours.isLoading) {\n        return <Refresh />;\n    } else if (match.isError || colours.isError) {\n        return (\n            <div>\n                {match.error || colours.error};\n                <Refresh />\n            </div>\n        );\n    }\n    return (\n        <RenderRoutes routes={routes} />\n    )\n};\n\nexport default Match;","/usr/src/client/src/routes/matches/matches.tsx",["361","362","363","364","365","366","367","368"],"import React, { useState } from 'react';\nimport { RouteConfig } from '../';\nimport { MatchList } from './components/match-list';\nimport './matches.css'\n\nconst Matches: React.FC<RouteConfig> = () => {\n    const [name, setName] = useState('');\n    const [state, setState] = useState('');\n    const [host, setHost] = useState('');\n    const [rows, setRows] = useState(0);\n    const [columns, setColumns] = useState(0);\n    const [acceleration, setAcceleration] = useState(0);\n    const [align, setAlign] = useState(0);\n    const [timeLimit, setTimeLimit] = useState(0);\n\n    return (\n        <div className='matches-page'>\n            <div className='search-bar' >\n                <div>\n                    <input name='name' type='text' placeholder='name' />\n                </div>\n                <div>\n                    <input name='host' type='text' placeholder='host' />\n                </div>\n                <div>\n                    <input name='rows' type='number' placeholder='rows' />\n                </div>\n                <div>\n                    <input name='columns' type='number' placeholder='columns' />\n                </div>\n                <div>\n                    <input name='align' type='number' placeholder='counters to align' />\n                </div>\n                <div>\n                    <input name='acceleration' type='number' placeholder='counter acceleration' />\n                </div>\n                <div>\n                    <input name='time-limit' type='number' placeholder='seconds per turn' />\n                </div>\n                <div>\n                    <select name='state'>\n                        <option value=\"\" > any </option>\n                        <option value=\"waiting\" >waiting</option>\n                        <option value=\"ongoing\" >ongoing</option>\n                        <option value=\"complete\" >complete</option>\n                    </select>\n                </div>\n            </div>\n            <MatchList\n                name={name}\n                state={state}\n                host={host}\n                rows={rows}\n                columns={columns}\n                acceleration={acceleration}\n                align={align}\n                timeLimit={timeLimit}\n            />\n        </div>\n    )\n}\n\nexport default Matches;","/usr/src/client/src/routes/profile/profile.tsx",["369"],"import React, { useEffect } from 'react';\nimport { RouteConfig } from '../';\nimport { Logout } from './components/logout';\nimport './profile.css';\n\nconst Profile: React.FC<RouteConfig> = () => {\n\n    return (\n        <div className='profile-page' >\n            <div>\n                profile\n            </div>\n            <Logout />\n        </div>\n    )\n}\n\nexport default Profile","/usr/src/client/src/routes/profile/components/logout/index.ts",[],"/usr/src/client/src/routes/matches/components/match-list/index.ts",[],"/usr/src/client/src/routes/profile/components/logout/logout.tsx",[],"/usr/src/client/src/routes/matches/components/match-list/match-list.tsx",["370","371"],"import React, { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { API } from '../../../../utils';\nimport { Refresh } from '../../../login/components/refresh';\nimport { MatchAction } from '../match-action';\nimport { MatchItem } from '../match-item';\nimport './match-list.css';\n\ninterface IMatch {\n    id?: string,\n    name?: string,\n    state?: string,\n    host?: string,\n    rows?: number,\n    columns?: number,\n    acceleration?: number,\n    align?: number,\n    timeLimit?: number,\n    password?: string,\n}\n\nconst MatchList: React.FC<IMatch> = ({ name, state, host, rows, columns, acceleration, align, timeLimit }) => {\n    const [click, setClick] = useState(0);\n\n    const fetchMatches = () => {\n        const attributes: IMatch = {\n            name,\n            state,\n            host,\n            rows,\n            columns,\n            acceleration,\n            align,\n            timeLimit\n        }\n        const activeAttributes = Object.keys(attributes).reduce<any>((filtered, key) => {\n            if (attributes[key as keyof IMatch]) {\n                filtered[key as keyof IMatch] = attributes[key as keyof IMatch]\n            }\n            return filtered;\n        }, {})\n        return API.post('match', {\n            ...activeAttributes\n        })\n    }\n\n    const { isLoading, isError, data, error } = useQuery('matches', fetchMatches);\n\n    if (isLoading) {\n        return (\n            <Refresh />\n        )\n    }\n\n    return (\n        <React.Fragment>\n            <div className='matches-list'>\n                {Array.from<IMatch>(data?.data).map((match, index) => {\n                    const { id, ...rest } = match;\n                    return <MatchItem key={id} index={index} amount={data?.data.length} click={click} setClick={setClick} {...rest} />\n                })}\n            </div>\n            <MatchAction id={data?.data[click].id} name={data?.data[click].name} rows={data?.data[click].rows} columns={data?.data[click].columns}/>\n        </React.Fragment>\n    );\n}\n\nexport default MatchList","/usr/src/client/src/routes/matches/components/match-action/index.ts",[],"/usr/src/client/src/routes/matches/components/match-item/index.ts",[],"/usr/src/client/src/routes/matches/components/match-action/match-action.tsx",["372","373","374","375","376","377"],"import { AxiosResponse } from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useMutation, useQuery } from 'react-query';\nimport { API } from '../../../../utils';\nimport { Refresh } from '../../../login/components/refresh';\nimport { MatchPassword } from '../match-password';\nimport './match-action.css';\n\nconst MatchAction: React.FC<any> = ({ id, name, rows, columns }) => {\n\n  useEffect(() => {\n    refetch();\n  }, [id]);\n\n  const fetchMatchDetails = () => {\n    return API.get(`match/${id}`);\n  };\n\n  const { isLoading, isError, data, error, refetch } = useQuery('matchDetails', fetchMatchDetails, { enabled: false });\n\n  if (isLoading) {\n    return (\n      <Refresh />\n    );\n  }\n  return (\n    <div className=\"match-action\" >\n      <div>\n        players: {` ${data?.data.aliases.length}/20`}\n      </div>\n      <div>\n        progress: {` ${(data?.data.moves.length / (rows * columns) * 100).toFixed(1)}%`}\n      </div>\n      <div className=\"match-password\" >\n        <MatchPassword id={id} name={name}/>\n      </div>\n    </div>\n  );\n}\n\nexport default MatchAction;","/usr/src/client/src/routes/matches/components/match-item/match-item.tsx",["378"],"import React, { useLayoutEffect, useState } from 'react';\nimport './match-item.css';\n\nconst MatchItem: React.FC<any> = (props) => {\n    const [location, setLocation] = useState('');\n    const [numberOfFields, setNumberOfFields] = useState(0);\n    const { index, click, setClick, amount, ...rest } = props;\n\n    useLayoutEffect(() => {\n        if (index === 0) {\n            setLocation(\"top\");\n        } else if (index === amount - 1) {\n            setLocation(\"bottom\");\n        } else {\n            setLocation(\"middle\");\n        }\n        setNumberOfFields(Object.keys(rest).length);\n    }, [])\n\n    return (\n        <button\n            className={\"match-item \" + location}\n            onClick={() => setClick(index)}>\n            {Object.entries(rest).map((entry, position) => {\n                const isClicked = click === index ? \"clicked \" : \"\";\n                const isEnd = (position === numberOfFields - 1) ? \"end\" : \"\";\n                return (\n                    <div className={isClicked + isEnd}>\n                        {entry[1] as string}\n                    </div>\n                )\n            })}\n        </button>\n    )\n};\n\nexport default MatchItem;","/usr/src/client/src/routes/matches/components/match-password/index.ts",[],"/usr/src/client/src/routes/matches/components/match-password/match-password.tsx",["379"],"import { AxiosResponse } from 'axios';\nimport React, { useLayoutEffect, useState } from 'react';\nimport { useMutation } from 'react-query';\nimport { useHistory } from 'react-router-dom';\nimport { API } from '../../../../utils';\nimport { Refresh } from '../../../login/components/refresh';\nimport './match-password.css';\n\nconst MatchPassword: React.FC<any> = ({ id, name }: { id: string, name: string }) => {\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n\n  useLayoutEffect(() => {\n    checkPassword.reset();\n    setPassword('');\n  }, [id])\n\n  const onJoin = () => {\n    const splitName = name.split(' ');\n    const conjoinedName = splitName[0] + splitName[1].charAt(0).toUpperCase() + splitName[1].slice(1);\n    history.push(`/${conjoinedName}`);\n  }\n\n  const checkMatchPassword = (password: string) => {\n    return API.post(`match/${id}`, { password })\n  }\n  const checkPassword = useMutation<AxiosResponse<string>, Error, string>(checkMatchPassword);\n\n  const handlePasswordSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    checkPassword.mutate(password);\n  }\n\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(e.target.value);\n  }\n\n  return (\n    <React.Fragment> {checkPassword.isLoading ? (\n      <Refresh />\n    ) : (\n        <>\n          {checkPassword.isError ? (\n            <Refresh />\n          ) : null}\n\n          {checkPassword.isSuccess && checkPassword.data?.data ? (\n            <React.Fragment>\n              <button>\n                spectate\n              </button>\n              <button onClick={onJoin} >\n                join\n              </button>\n            </React.Fragment>\n          ) : (\n              <React.Fragment>\n                <form onSubmit={handlePasswordSubmit} >\n                  <label> password: </label>\n                  <input type=\"input\" name=\"match-password\" value={password} onChange={handlePasswordChange} />\n                  <input type=\"submit\" style={{ display: \"none\" }} />\n                </form>\n              </React.Fragment>\n            )}\n        </>\n      )\n    }\n    </React.Fragment>\n  )\n}\n\nexport default MatchPassword;","/usr/src/client/src/routes/lobby/index.ts",[],"/usr/src/client/src/routes/lobby/lobby.tsx",[],"/usr/src/client/src/components/counter/index.ts",[],"/usr/src/client/src/components/counter/counter.tsx",[],"/usr/src/client/src/routes/lobby/components/colour-selector/index.ts",[],"/usr/src/client/src/routes/lobby/components/colour-selector/colour-selector.tsx",["380","381"],"import React, { useCallback, useRef } from 'react';\nimport './colour-selector.css';\n\nconst ColourSelector: React.FC<any> = ({ colour, enabledColours, selectedColourIndex, setSelectedColourIndex, isReady}) => {\n    const setContent = useCallback((node: HTMLButtonElement) => {\n        if (node && enabledColours) {\n            if (!enabledColours.includes(colour.index)) {\n                node.style.color = '#fff';\n            } else if (selectedColourIndex === colour.index) {\n                node.style.color = '#ddd';\n            } else {\n                node.style.color = colour.id;\n            }\n        }\n    }, [enabledColours, selectedColourIndex])\n    return (\n        <button key={colour.id} ref={setContent} className='colour-selector' onClick={() => !isReady ? setSelectedColourIndex(colour.index) : null}>\n            {colour.name}\n        </button>\n    )\n}\n\nexport default ColourSelector;","/usr/src/client/src/routes/lobby/hooks/index.ts",[],"/usr/src/client/src/routes/lobby/hooks/use-lobby.tsx",["382","383","384","385","386","387","388"],"import React, { useEffect, useReducer, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { useUser } from '../../../contexts/auth';\nimport { useWebSocket } from '../../../contexts/websocket';\nimport { API } from '../../../utils';\n\nconst getTime = (date: Date): string => {\n    return date.toUTCString().split(' ')[4];\n}\n\nconst playerReducer = (state: any, { status, id, alias }: any) => {\n    if (!state) {\n        return { id: { status, alias } };\n    } else {\n        const newState = { ...state };\n        newState[id] = { status, alias };\n        return newState;\n    }\n}\n\nconst useLobby = ({ match, aliases, colours }: any) => {\n    const [messages, setMessages] = useState<JSX.Element[] | null>(null);\n    const [players, playersDispatch] = useReducer(playerReducer, {});\n    const [isReady, setIsReady] = useState(false);\n    const [selectedColourIndex, setSelectedColourIndex] = useState<number | null>(null);\n    const [enabledColours, setEnabledColours] = useState<number[] | null>(null);\n    const [colourMap, setColourMap] = useState<any>(null);\n    const user = useUser();\n    const { ws, wsEvent } = useWebSocket();\n\n    useEffect(() => {\n        if (!enabledColours) {\n            const pickedColours = Object.values<any>(aliases).map(alias => alias.colour_index);\n            const remainingColours = colours.map((colour: any) => colour.index).filter((colourIndex: any) => !pickedColours.includes(colourIndex));\n            ws.sendMessage('join', {\n                gameId: match.id,\n                playerId: user.data.id,\n                name: user.data.username,\n                colourIndex: remainingColours[0]\n            });\n            setEnabledColours(remainingColours);\n            setSelectedColourIndex(remainingColours[0]);\n            setColourMap(colours.reduce((map: any, colour: any) => {\n                const {index, ...rest} = colour;\n                map[colour.index] = rest;\n                return map\n            }, {}));\n        }\n    }, [])\n\n    useEffect(() => {\n        wsEvent({ type: 'add', event: 'update', callback: onUpdate });\n        wsEvent({ type: 'add', event: 'join', callback: onJoin });\n        wsEvent({ type: 'add', event: 'leave', callback: onLeave });\n        return () => {\n            wsEvent({ type: 'remove', event: 'update' });\n            wsEvent({ type: 'remove', event: 'join' });\n            wsEvent({ type: 'remove', event: 'leave' });\n        }\n    }, [colourMap]);\n\n    const onUpdate = React.useCallback((data: any) => {\n        const status = data.status === 'ready';\n        const msg = status ? 'is ready' : 'is not ready';\n        const alias = <span style={{ color: status ? colourMap[data.colour_index].id : '#ddd' }}> {data.alias} </span>;\n        setEnabledColours(colours => {\n            if (colours) {\n                if (!status) {\n                    return [...colours].concat(data.colour_index);\n                } else {\n                    return [...colours].filter(colour => colour !== data.colour_index);\n                }\n            } else {\n                return colours\n            }\n        })\n        playersDispatch({ status: data.status, id: data.player_id, alias: data.alias });\n        setMessages(state => {\n            if (!state) {\n                return [<div> {`${getTime(new Date())}:`} {alias} {msg} </div>];\n            } else {\n                return [...state].concat(<div> {`${getTime(new Date())}:`} {alias} {msg} </div>)\n            }\n        })\n    }, [colourMap]);\n\n    const onJoin = React.useCallback((data: any) => {\n        const alias = <span style={{ color: '#ddd' }}> {data.alias} </span>;\n        setMessages(state => {\n            if (!state) {\n                return [<div> {`${getTime(new Date())}:`} {alias} has joined </div>];\n            } else {\n                return [...state].concat(<div> {`${getTime(new Date())}:`} {alias} has joined </div>)\n            }\n        })\n        for (const alias of aliases) {\n            playersDispatch({ status: alias.status, id: alias.player_id, alias: alias.alias });\n        };\n        playersDispatch({ status: 'unready', id: data.player_id, alias: data.alias });\n    }, []);\n\n    const onLeave = React.useCallback((data: any) => {\n        const alias = <span style={{ color: '#ddd' }}> {data.alias} </span>;\n        setMessages(state => {\n            if (!state) {\n                return [<div> {`${getTime(new Date())}:`} {alias} has left </div>];\n            } else {\n                return [...state].concat(<div> {`${getTime(new Date())}:`} {alias} has left </div>)\n            }\n        })\n    }, []);\n\n\n    const handleReady = React.useCallback(() => {\n        if (selectedColourIndex !== null) {\n            ws.sendMessage('update', {\n                playerId: user.data.id,\n                gameId: match.id,\n                name: user.data.username,\n                colourIndex: selectedColourIndex,\n                status: !isReady ? 'ready' : 'unready'\n            });\n            setIsReady(!isReady);\n        }\n    }, [selectedColourIndex, isReady]);\n\n    const handleStart = React.useCallback(() => {\n        ws.sendMessage('start', {\n            id: match.id,\n            state: 'ongoing'\n        });\n    }, [match.id]);\n\n    return {\n        user,\n        messages,\n        selectedColourIndex,\n        enabledColours,\n        players,\n        isReady,\n        setSelectedColourIndex,\n        handleReady,\n        handleStart,\n        colours\n    }\n}\n\nexport default useLobby;","/usr/src/client/src/routes/play/index.ts",[],"/usr/src/client/src/routes/play/play.tsx",[],"/usr/src/client/src/components/game/index.ts",[],"/usr/src/client/src/components/game/game.tsx",["389","390","391","392","393","394","395","396"],"/usr/src/client/src/components/game/components/index.ts",[],"/usr/src/client/src/components/game/components/board/index.ts",[],"/usr/src/client/src/components/game/components/board/board.tsx",["397","398"],"/usr/src/client/src/components/game/components/input-row/index.ts",[],"/usr/src/client/src/components/game/components/input-row/input-row.tsx",["399","400","401","402"],"import React, { useEffect, useState } from 'react';\nimport { useMatch } from '../../../../contexts/match';\nimport { useWebSocket } from '../../../../contexts/websocket';\nimport { InputSlot } from '../input-slot';\nimport './input-row.css';\n\nconst InputRow: React.FC<any> = ({ currentIndex, attemptMove, isGameEnd }) => {\n    const { colours, columns, aliases } = useMatch();\n    const [inputStates, setInputStates] = useState<boolean[]>(Array(columns).fill(false));\n    const { ws, wsEvent } = useWebSocket();\n\n    const onHover = React.useCallback((data: any) => {\n        setInputStates((states: any) => {\n            const newStates = [...states];\n            newStates[data.index] = !data.state;\n            return newStates;\n        });\n    }, [setInputStates]);\n\n    useEffect(() => {\n        wsEvent({type: 'add', event: 'hover', callback: onHover})\n    }, [setInputStates]);\n\n    return (\n        <div className=\"input-row\" >\n            {inputStates.map((state, index) =>\n                <InputSlot\n                    forwardedKey={`input-row-${index}`}\n                    index={index}\n                    state={state}\n                    currentIndex={currentIndex}\n                    attemptMove={attemptMove}\n                    isGameEnd={isGameEnd}\n                />\n            )}\n        </div>\n    )\n}\n\nexport default InputRow;","/usr/src/client/src/components/game/hooks/index.ts",[],"/usr/src/client/src/components/game/hooks/use-element-dimensions.tsx",[],"/usr/src/client/src/contexts/match/index.ts",[],"/usr/src/client/src/contexts/match/match-context.tsx",["403","404","405","406","407","408"],"import React, { useEffect, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { Refresh } from '../../routes/login/components/refresh';\nimport { API } from '../../utils';\n\ninterface IColour {\n    id: string;\n    name: string;\n    index: number;\n}\n\ninterface IMatchContext {\n    id: string;\n    name: string;\n    host: string;\n    rows: number;\n    columns: number;\n    align: number;\n    acceleration: number;\n    timeLimit: number;\n    state: string;\n    aliases: { id: string, alias: string, colourIndex: number }[];\n    moves: any;\n    colours: { id: string, name: string }[];\n}\n\nconst MatchContext = React.createContext<IMatchContext | undefined>({} as IMatchContext);\n\n\nfunction MatchContextProvider({ children, match, aliases, moves, colours }: any) {\n\n    const values = React.useMemo(() => {\n        const colourMap = colours.reduce((map: any, colour: any) => {\n            const {index, ...rest} = colour;\n            map[colour.index] = rest;\n            return map\n        }, {});\n        const mutatedAliases = [];\n        for (const alias of aliases) {\n            const {colour_index, player_id, ...rest} = alias;\n            mutatedAliases.push({ colourIndex: colour_index, id: player_id, ...rest});\n        };\n        return {\n            ...match,\n            aliases :mutatedAliases,\n            colours: colourMap,\n            moves\n        }\n    }, [match, aliases, colours, moves])\n\n    return (\n        <MatchContext.Provider value={values}>\n            {children}\n        </MatchContext.Provider>\n    )\n}\n\nconst useMatch = () => {\n    const context = React.useContext(MatchContext);\n    if (context === undefined) {\n        throw new Error(`useMatch must be used within a MatchProvider`);\n    }\n    return context;\n}\n\nexport { MatchContextProvider, useMatch }","/usr/src/client/src/components/game/components/input-slot/index.ts",[],"/usr/src/client/src/components/game/components/input-slot/input-slot.tsx",["409","410"],"import React from 'react';\nimport { useUser } from '../../../../contexts/auth';\nimport { useMatch } from '../../../../contexts/match';\nimport { useWebSocketState } from '../../../../contexts/websocket';\nimport { Counter } from '../../../counter';\nimport './input-slot.css';\n\nconst InputSlot: React.FC<any> = ({ forwardedKey, state, index, currentIndex, attemptMove, isGameEnd }) => {\n    const { id, aliases, colours, rows } = useMatch();\n    const user = useUser();\n    const ws = useWebSocketState();\n    const handleClick: React.MouseEventHandler<HTMLButtonElement> = React.useCallback((e) => {\n        e.preventDefault();\n        if (user.data.id === aliases[currentIndex].id) {\n            attemptMove(rows - 1, index);\n        };\n    }, [attemptMove, currentIndex]);\n\n    const handleHover: React.MouseEventHandler<HTMLButtonElement> = React.useCallback((e) => {\n        e.preventDefault();\n        if (!isGameEnd && (aliases[currentIndex].id === user.data.id)) {\n            ws.sendMessage('hover', {\n                gameId: id,\n                index,\n                state\n            })\n        }\n    }, [state, currentIndex, isGameEnd]);\n\n    return (\n        <button key={forwardedKey} className='input-slot' onMouseEnter={handleHover} onMouseLeave={handleHover} onClick={handleClick}>\n            {state ? <Counter fill={colours[aliases[currentIndex].colourIndex].id} stroke='#000000' /> : null}\n        </button>\n    )\n};\n\nexport default InputSlot;","/usr/src/client/src/components/game/components/board-counter/index.ts",[],"/usr/src/client/src/components/game/components/board-counter/board-counter.tsx",[],"/usr/src/client/src/components/game/components/board-counter-column/index.ts",[],"/usr/src/client/src/components/game/components/board-counter-column/board-counter-column.tsx",["411","412"],"/usr/src/client/src/components/game/hooks/use-component-id.tsx",[],"/usr/src/client/src/components/game/components/slot/index.ts",[],"/usr/src/client/src/components/game/components/slot/slot.tsx",[],"/usr/src/client/src/components/game/components/board-slot/index.ts",[],"/usr/src/client/src/components/game/components/board-slot/board-slot.tsx",[],{"ruleId":"413","replacedBy":"414"},{"ruleId":"415","replacedBy":"416"},{"ruleId":"417","severity":1,"message":"418","line":41,"column":16,"nodeType":"419","messageId":"420","endLine":41,"endColumn":32},{"ruleId":"413","replacedBy":"421"},{"ruleId":"415","replacedBy":"422"},{"ruleId":"417","severity":1,"message":"423","line":1,"column":17,"nodeType":"419","messageId":"420","endLine":1,"endColumn":26},{"ruleId":"417","severity":1,"message":"424","line":15,"column":13,"nodeType":"419","messageId":"420","endLine":15,"endColumn":22},{"ruleId":"417","severity":1,"message":"425","line":15,"column":24,"nodeType":"419","messageId":"420","endLine":15,"endColumn":31},{"ruleId":"426","severity":1,"message":"427","line":31,"column":8,"nodeType":"428","endLine":31,"endColumn":23,"suggestions":"429"},{"ruleId":"426","severity":1,"message":"430","line":38,"column":8,"nodeType":"428","endLine":38,"endColumn":19,"suggestions":"431"},{"ruleId":"417","severity":1,"message":"432","line":23,"column":12,"nodeType":"419","messageId":"420","endLine":23,"endColumn":16},{"ruleId":"426","severity":1,"message":"433","line":51,"column":8,"nodeType":"428","endLine":51,"endColumn":10,"suggestions":"434"},{"ruleId":"426","severity":1,"message":"435","line":55,"column":8,"nodeType":"428","endLine":55,"endColumn":10,"suggestions":"436"},{"ruleId":"426","severity":1,"message":"437","line":66,"column":8,"nodeType":"428","endLine":66,"endColumn":34,"suggestions":"438"},{"ruleId":"417","severity":1,"message":"439","line":7,"column":18,"nodeType":"419","messageId":"420","endLine":7,"endColumn":25},{"ruleId":"417","severity":1,"message":"440","line":8,"column":19,"nodeType":"419","messageId":"420","endLine":8,"endColumn":27},{"ruleId":"417","severity":1,"message":"441","line":9,"column":18,"nodeType":"419","messageId":"420","endLine":9,"endColumn":25},{"ruleId":"417","severity":1,"message":"442","line":10,"column":18,"nodeType":"419","messageId":"420","endLine":10,"endColumn":25},{"ruleId":"417","severity":1,"message":"443","line":11,"column":21,"nodeType":"419","messageId":"420","endLine":11,"endColumn":31},{"ruleId":"417","severity":1,"message":"444","line":12,"column":26,"nodeType":"419","messageId":"420","endLine":12,"endColumn":41},{"ruleId":"417","severity":1,"message":"445","line":13,"column":19,"nodeType":"419","messageId":"420","endLine":13,"endColumn":27},{"ruleId":"417","severity":1,"message":"446","line":14,"column":23,"nodeType":"419","messageId":"420","endLine":14,"endColumn":35},{"ruleId":"417","severity":1,"message":"423","line":1,"column":17,"nodeType":"419","messageId":"420","endLine":1,"endColumn":26},{"ruleId":"417","severity":1,"message":"425","line":47,"column":24,"nodeType":"419","messageId":"420","endLine":47,"endColumn":31},{"ruleId":"417","severity":1,"message":"447","line":47,"column":39,"nodeType":"419","messageId":"420","endLine":47,"endColumn":44},{"ruleId":"417","severity":1,"message":"448","line":1,"column":10,"nodeType":"419","messageId":"420","endLine":1,"endColumn":23},{"ruleId":"417","severity":1,"message":"449","line":2,"column":28,"nodeType":"419","messageId":"420","endLine":2,"endColumn":36},{"ruleId":"417","severity":1,"message":"450","line":3,"column":10,"nodeType":"419","messageId":"420","endLine":3,"endColumn":21},{"ruleId":"426","severity":1,"message":"451","line":13,"column":6,"nodeType":"428","endLine":13,"endColumn":10,"suggestions":"452"},{"ruleId":"417","severity":1,"message":"425","line":19,"column":22,"nodeType":"419","messageId":"420","endLine":19,"endColumn":29},{"ruleId":"417","severity":1,"message":"447","line":19,"column":37,"nodeType":"419","messageId":"420","endLine":19,"endColumn":42},{"ruleId":"426","severity":1,"message":"453","line":18,"column":8,"nodeType":"428","endLine":18,"endColumn":10,"suggestions":"454"},{"ruleId":"426","severity":1,"message":"455","line":16,"column":6,"nodeType":"428","endLine":16,"endColumn":10,"suggestions":"456"},{"ruleId":"417","severity":1,"message":"457","line":1,"column":30,"nodeType":"419","messageId":"420","endLine":1,"endColumn":36},{"ruleId":"426","severity":1,"message":"458","line":15,"column":8,"nodeType":"428","endLine":15,"endColumn":45,"suggestions":"459"},{"ruleId":"417","severity":1,"message":"460","line":2,"column":10,"nodeType":"419","messageId":"420","endLine":2,"endColumn":18},{"ruleId":"417","severity":1,"message":"461","line":5,"column":10,"nodeType":"419","messageId":"420","endLine":5,"endColumn":13},{"ruleId":"426","severity":1,"message":"462","line":49,"column":8,"nodeType":"428","endLine":49,"endColumn":10,"suggestions":"463"},{"ruleId":"426","severity":1,"message":"464","line":60,"column":8,"nodeType":"428","endLine":60,"endColumn":19,"suggestions":"465"},{"ruleId":"426","severity":1,"message":"466","line":100,"column":8,"nodeType":"428","endLine":100,"endColumn":10,"suggestions":"467"},{"ruleId":"426","severity":1,"message":"468","line":125,"column":8,"nodeType":"428","endLine":125,"endColumn":38,"suggestions":"469"},{"ruleId":"426","severity":1,"message":"470","line":132,"column":8,"nodeType":"428","endLine":132,"endColumn":18,"suggestions":"471"},{"ruleId":"417","severity":1,"message":"472","line":14,"column":12,"nodeType":"419","messageId":"420","endLine":14,"endColumn":28},{"ruleId":"473","severity":1,"message":"474","line":20,"column":31,"nodeType":"475","messageId":"476","endLine":23,"endColumn":14},{"ruleId":"426","severity":1,"message":"477","line":52,"column":8,"nodeType":"428","endLine":52,"endColumn":27,"suggestions":"478"},{"ruleId":"426","severity":1,"message":"479","line":72,"column":8,"nodeType":"428","endLine":72,"endColumn":45,"suggestions":"480"},{"ruleId":"426","severity":1,"message":"481","line":95,"column":8,"nodeType":"428","endLine":95,"endColumn":10,"suggestions":"482"},{"ruleId":"426","severity":1,"message":"430","line":102,"column":8,"nodeType":"428","endLine":102,"endColumn":16,"suggestions":"483"},{"ruleId":"426","severity":1,"message":"484","line":108,"column":8,"nodeType":"428","endLine":108,"endColumn":10,"suggestions":"485"},{"ruleId":"426","severity":1,"message":"486","line":130,"column":8,"nodeType":"428","endLine":130,"endColumn":37,"suggestions":"487"},{"ruleId":"417","severity":1,"message":"449","line":1,"column":17,"nodeType":"419","messageId":"420","endLine":1,"endColumn":25},{"ruleId":"417","severity":1,"message":"488","line":5,"column":10,"nodeType":"419","messageId":"420","endLine":5,"endColumn":14},{"ruleId":"417","severity":1,"message":"489","line":8,"column":13,"nodeType":"419","messageId":"420","endLine":8,"endColumn":20},{"ruleId":"417","severity":1,"message":"490","line":8,"column":31,"nodeType":"419","messageId":"420","endLine":8,"endColumn":38},{"ruleId":"417","severity":1,"message":"491","line":10,"column":13,"nodeType":"419","messageId":"420","endLine":10,"endColumn":15},{"ruleId":"426","severity":1,"message":"492","line":22,"column":8,"nodeType":"428","endLine":22,"endColumn":24,"suggestions":"493"},{"ruleId":"417","severity":1,"message":"423","line":1,"column":17,"nodeType":"419","messageId":"420","endLine":1,"endColumn":26},{"ruleId":"417","severity":1,"message":"449","line":1,"column":28,"nodeType":"419","messageId":"420","endLine":1,"endColumn":36},{"ruleId":"417","severity":1,"message":"460","line":2,"column":10,"nodeType":"419","messageId":"420","endLine":2,"endColumn":18},{"ruleId":"417","severity":1,"message":"494","line":3,"column":10,"nodeType":"419","messageId":"420","endLine":3,"endColumn":17},{"ruleId":"417","severity":1,"message":"461","line":4,"column":10,"nodeType":"419","messageId":"420","endLine":4,"endColumn":13},{"ruleId":"417","severity":1,"message":"495","line":6,"column":11,"nodeType":"419","messageId":"420","endLine":6,"endColumn":18},{"ruleId":"426","severity":1,"message":"496","line":17,"column":8,"nodeType":"428","endLine":17,"endColumn":35,"suggestions":"497"},{"ruleId":"426","severity":1,"message":"498","line":28,"column":8,"nodeType":"428","endLine":28,"endColumn":40,"suggestions":"499"},{"ruleId":"417","severity":1,"message":"449","line":1,"column":17,"nodeType":"419","messageId":"420","endLine":1,"endColumn":25},{"ruleId":"417","severity":1,"message":"500","line":2,"column":10,"nodeType":"419","messageId":"420","endLine":2,"endColumn":18},"no-native-reassign",["501"],"no-negated-in-lhs",["502"],"@typescript-eslint/no-unused-vars","'displayRouteMenu' is defined but never used.","Identifier","unusedVar",["501"],["502"],"'useEffect' is defined but never used.","'isLoading' is assigned a value but never used.","'isError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["503"],"React Hook useEffect has a missing dependency: 'wsEvent'. Either include it or remove the dependency array.",["504"],"'_key' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onStart' and 'wsEvent'. Either include them or remove the dependency array.",["505"],"React Hook React.useCallback has a missing dependency: 'match'. Either include it or remove the dependency array.",["506"],"React Hook useEffect has missing dependencies: 'history' and 'matchName'. Either include them or remove the dependency array.",["507"],"'setName' is assigned a value but never used.","'setState' is assigned a value but never used.","'setHost' is assigned a value but never used.","'setRows' is assigned a value but never used.","'setColumns' is assigned a value but never used.","'setAcceleration' is assigned a value but never used.","'setAlign' is assigned a value but never used.","'setTimeLimit' is assigned a value but never used.","'error' is assigned a value but never used.","'AxiosResponse' is defined but never used.","'useState' is defined but never used.","'useMutation' is defined but never used.","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.",["508"],"React Hook useLayoutEffect has missing dependencies: 'amount', 'index', and 'rest'. Either include them or remove the dependency array.",["509"],"React Hook useLayoutEffect has a missing dependency: 'checkPassword'. Either include it or remove the dependency array.",["510"],"'useRef' is defined but never used.","React Hook useCallback has missing dependencies: 'colour.id' and 'colour.index'. Either include them or remove the dependency array.",["511"],"'useQuery' is defined but never used.","'API' is defined but never used.","React Hook useEffect has missing dependencies: 'aliases', 'colours', 'enabledColours', 'match.id', 'user.data.id', 'user.data.username', and 'ws'. Either include them or remove the dependency array. If 'setColourMap' needs the current value of 'colours', you can also switch to useReducer instead of useState and read 'colours' in the reducer.",["512"],"React Hook useEffect has missing dependencies: 'onJoin', 'onLeave', 'onUpdate', and 'wsEvent'. Either include them or remove the dependency array.",["513"],"React Hook React.useCallback has a missing dependency: 'aliases'. Either include it or remove the dependency array.",["514"],"React Hook React.useCallback has missing dependencies: 'match.id', 'user.data.id', 'user.data.username', and 'ws'. Either include them or remove the dependency array.",["515"],"React Hook React.useCallback has a missing dependency: 'ws'. Either include it or remove the dependency array.",["516"],"'winningPositions' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useLayoutEffect has missing dependencies: 'columns', 'displayRef', and 'rows'. Either include them or remove the dependency array.",["517"],"React Hook React.useCallback has missing dependencies: 'aliases' and 'columns'. Either include them or remove the dependency array.",["518"],"React Hook useLayoutEffect has missing dependencies: 'aliases' and 'moves'. Either include them or remove the dependency array.",["519"],["520"],"React Hook useEffect has missing dependencies: 'name' and 'ws'. Either include them or remove the dependency array.",["521"],"React Hook React.useCallback has missing dependencies: 'id', 'user.data.id', and 'ws'. Either include them or remove the dependency array.",["522"],"'Slot' is defined but never used.","'colours' is assigned a value but never used.","'aliases' is assigned a value but never used.","'ws' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onHover' and 'wsEvent'. Either include them or remove the dependency array.",["523"],"'Refresh' is defined but never used.","'IColour' is defined but never used.","React Hook React.useCallback has missing dependencies: 'aliases', 'index', 'rows', and 'user.data.id'. Either include them or remove the dependency array.",["524"],"React Hook React.useCallback has missing dependencies: 'aliases', 'id', 'index', 'user.data.id', and 'ws'. Either include them or remove the dependency array.",["525"],"'useMatch' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"532","fix":"533"},{"desc":"534","fix":"535"},{"desc":"536","fix":"537"},{"desc":"538","fix":"539"},{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},{"desc":"544","fix":"545"},{"desc":"546","fix":"547"},{"desc":"548","fix":"549"},{"desc":"550","fix":"551"},{"desc":"552","fix":"553"},{"desc":"554","fix":"555"},{"desc":"556","fix":"557"},{"desc":"558","fix":"559"},{"desc":"560","fix":"561"},{"desc":"562","fix":"563"},{"desc":"564","fix":"565"},{"desc":"566","fix":"567"},{"desc":"568","fix":"569"},{"desc":"570","fix":"571"},"Update the dependencies array to be: [conjoinedName, history]",{"range":"572","text":"573"},"Update the dependencies array to be: [isCreated, wsEvent]",{"range":"574","text":"575"},"Update the dependencies array to be: [onStart, wsEvent]",{"range":"576","text":"577"},"Update the dependencies array to be: [match]",{"range":"578","text":"579"},"Update the dependencies array to be: [match.data, colours.data, history, matchName]",{"range":"580","text":"581"},"Update the dependencies array to be: [id, refetch]",{"range":"582","text":"583"},"Update the dependencies array to be: [amount, index, rest]",{"range":"584","text":"585"},"Update the dependencies array to be: [checkPassword, id]",{"range":"586","text":"587"},"Update the dependencies array to be: [colour.id, colour.index, enabledColours, selectedColourIndex]",{"range":"588","text":"589"},"Update the dependencies array to be: [aliases, colours, enabledColours, match.id, user.data.id, user.data.username, ws]",{"range":"590","text":"591"},"Update the dependencies array to be: [colourMap, onJoin, onLeave, onUpdate, wsEvent]",{"range":"592","text":"593"},"Update the dependencies array to be: [aliases]",{"range":"594","text":"595"},"Update the dependencies array to be: [selectedColourIndex, ws, user.data.id, user.data.username, match.id, isReady]",{"range":"596","text":"597"},"Update the dependencies array to be: [match.id, ws]",{"range":"598","text":"599"},"Update the dependencies array to be: [columns, displayDimensions, displayRef, rows]",{"range":"600","text":"601"},"Update the dependencies array to be: [aliases, isGameEnd, columns, currentIndex, slotValues]",{"range":"602","text":"603"},"Update the dependencies array to be: [aliases, moves]",{"range":"604","text":"605"},"Update the dependencies array to be: [onMove, wsEvent]",{"range":"606","text":"607"},"Update the dependencies array to be: [name, ws]",{"range":"608","text":"609"},"Update the dependencies array to be: [isGameEnd, slotValues, ws, user.data.id, id, turn]",{"range":"610","text":"611"},"Update the dependencies array to be: [onHover, setInputStates, wsEvent]",{"range":"612","text":"613"},"Update the dependencies array to be: [aliases, attemptMove, currentIndex, index, rows, user.data.id]",{"range":"614","text":"615"},"Update the dependencies array to be: [isGameEnd, aliases, currentIndex, user.data.id, ws, id, index, state]",{"range":"616","text":"617"},[1197,1212],"[conjoinedName, history]",[1401,1412],"[isCreated, wsEvent]",[1812,1814],"[onStart, wsEvent]",[1896,1898],"[match]",[2396,2422],"[match.data, colours.data, history, matchName]",[438,442],"[id, refetch]",[594,596],"[amount, index, rest]",[568,572],"[checkPassword, id]",[619,656],"[colour.id, colour.index, enabledColours, selectedColourIndex]",[1999,2001],"[aliases, colours, enabledColours, match.id, user.data.id, user.data.username, ws]",[2444,2455],"[colourMap, onJoin, onLeave, onUpdate, wsEvent]",[4167,4169],"[aliases]",[5027,5057],"[selectedColourIndex, ws, user.data.id, user.data.username, match.id, isReady]",[5219,5229],"[match.id, ws]",[2160,2179],"[columns, displayDimensions, displayRef, rows]",[2870,2907],"[aliases, isGameEnd, columns, currentIndex, slotValues]",[3673,3675],"[aliases, moves]",[3864,3872],"[onMove, wsEvent]",[3967,3969],"[name, ws]",[4475,4504],"[isGameEnd, slotValues, ws, user.data.id, id, turn]",[863,879],"[onHover, setInputStates, wsEvent]",[743,770],"[aliases, attemptMove, currentIndex, index, rows, user.data.id]",[1113,1145],"[isGameEnd, aliases, currentIndex, user.data.id, ws, id, index, state]"]