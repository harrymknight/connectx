version: '3.8'

services:
  server:
    container_name: server
    build:
      context: ./server
      target: development
    volumes:
      - ./server:/usr/src/server
      - /usr/src/server/node_modules
    expose:
      - ${SERVER_PORT}
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
      - 9229:9229
    command: [sh, -c, "npm run start:debug"]
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
  redis:
    container_name: redis
    image: redis:6
    command: ["redis-server", "--bind", "redis", "--port", "6379"]
  postgres:
    container_name: postgres
    image: postgres:12
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_NAME}
      PG_DATA: /var/lib/postgresql/data
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./server/scripts:/docker-entrypoint-initdb.d
      - ./server/public:/data
  client:
    container_name: client
    build:
      context: ./client
      target: development
    expose:
      - ${REACT_APP_PORT}
    volumes:
      - ./client:/usr/src/client
      - /usr/src/client/node_modules
    ports:
      - ${REACT_APP_PORT}:${REACT_APP_PORT}
    links:
      - server
    command: [sh, -c, "npm run start"]
    env_file:
      - .env
  reverse-proxy:
    container_name: reverse-proxy
    hostname: reverse-proxy
    image: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./reverse-proxy/config:/etc/nginx
      - ./reverse-proxy/certs:/etc/ssl/private
    depends_on: 
      - server
      - client
volumes:
  pgdata: